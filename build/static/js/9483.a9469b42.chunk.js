"use strict";(self.webpackChunkhuntington_tree_finder=self.webpackChunkhuntington_tree_finder||[]).push([[9483],{39483:(e,r,t)=>{t.r(r),t.d(r,{getGeometryServiceURL:()=>c,projectGeometry:()=>u});var n=t(86560),i=t(50076),o=t(65308),l=t(71334),a=t(70414);async function c(){var e;let r,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,l=arguments.length>1?arguments[1]:void 0;if(n.A.geometryServiceUrl)return n.A.geometryServiceUrl;if(!t)throw new i.A("internal:geometry-service-url-not-configured");r="portal"in t?t.portal||o.A.getDefault():t,await r.load({signal:l});const a=null===(e=r.helperServices)||void 0===e||null===(e=e.geometry)||void 0===e?void 0:e.url;if(!a)throw new i.A("internal:geometry-service-url-not-configured");return a}async function u(e,r){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3?arguments[3]:void 0;const o=await c(t,n),u=new a.A;u.geometries=[e],u.outSpatialReference=r;const g=await(0,l.C)(o,u,{signal:n});if(g&&Array.isArray(g)&&1===g.length)return g[0];throw new i.A("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=9483.a9469b42.chunk.js.map