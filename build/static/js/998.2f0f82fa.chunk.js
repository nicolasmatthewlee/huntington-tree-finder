"use strict";(self.webpackChunkhuntington_tree_finder=self.webpackChunkhuntington_tree_finder||[]).push([[998],{40998:(e,t,r)=>{r.r(t),r.d(t,{submitTraceJob:()=>c,trace:()=>s});var n=r(3825),a=r(54994),o=r(57778);async function s(e,t,r){const s=(0,a.Dl)(e),c=t.toJSON();c.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(c.resultTypes=JSON.stringify(t.resultTypes));const i=(0,a.jV)(s.query,{query:(0,a.lF)({...c,f:"json"}),...r}),g="".concat(s.path,"/trace");return(0,n.A)(g,i).then((e=>function(e,t){const{data:r}=e,n=o.A.fromJSON(r.traceResults);return n.aggregatedGeometry&&t&&(n.aggregatedGeometry.line&&(n.aggregatedGeometry.line.spatialReference=t.clone()),n.aggregatedGeometry.multipoint&&(n.aggregatedGeometry.multipoint.spatialReference=t.clone()),n.aggregatedGeometry.polygon&&(n.aggregatedGeometry.polygon.spatialReference=t.clone())),n}(e,t.outSpatialReference)))}async function c(e,t,r){const o=(0,a.Dl)(e),s=t.toJSON();s.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(s.resultTypes=JSON.stringify(t.resultTypes));const c=(0,a.jV)(o.query,{query:(0,a.lF)({...s,async:!0,f:"json"}),...r}),i="".concat(o.path,"/trace"),{data:g}=await(0,n.A)(i,c);return g.statusUrl}}}]);
//# sourceMappingURL=998.2f0f82fa.chunk.js.map