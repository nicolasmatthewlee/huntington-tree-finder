{"version":3,"file":"static/js/9185.72df9c6d.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/FloatingArrow.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/array.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/popover/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/popover/PopoverManager.ts","../node_modules/@esri/calcite-components/dist/components/src/components/popover/popover.scss?tag=calcite-popover&encapsulation=shadow"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FloatingLayout } from \"../../utils/floating-ui\";\n\ninterface FloatingArrowProps extends JSXAttributes {\n  floatingLayout: FloatingLayout;\n}\n\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1,\n};\n\n/**\n * Renders a SVG element to be used as a floating-ui arrow.\n *\n * This functional component should be rendered inside a `FloatingUIComponent` when it needs an arrow element.\n *\n * @param floatingLayout.floatingLayout\n * @param floatingLayout – The effective floating layout to render the arrow vertically or horizontally. Possible values: `vertical` or `horizontal`.\n *\n * See [floating-ui](https://github.com/Esri/calcite-design-system/blob/main/src/utils/floating-ui.ts)\n * @param floatingLayout.key\n * @param floatingLayout.ref\n */\nexport const FloatingArrow: FunctionalComponent<FloatingArrowProps> = ({\n  floatingLayout,\n  key,\n  ref,\n}) => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n\n  const dValue =\n    \"M0,0\" +\n    ` H${width}` +\n    ` L${width - svgX},${height}` +\n    ` Q${svgX},${height} ${svgX},${height}` +\n    \" Z\";\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      class={CSS.arrow}\n      height={width}\n      key={key}\n      viewBox={`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`}\n      width={width + (isVertical ? strokeWidth : 0)}\n      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n      ref={ref}\n    >\n      {strokeWidth > 0 && (\n        <path\n          class={CSS.arrowStroke}\n          d={dValue}\n          fill=\"none\"\n          // Account for the stroke on the fill path rendered below.\n          stroke-width={strokeWidth + 1}\n        />\n      )}\n      {/* In Firefox, for left/right placements there's a ~0.5px gap where the\n  border can show through. Adding a stroke on the fill removes it. */}\n      <path d={dValue} stroke=\"none\" />\n    </svg>\n  );\n};\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends JSXBase.HTMLAttributes {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children) => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return <HeadingTag {...props}>{children}</HeadingTag>;\n};\n","export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n","export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n};\n\nexport const activeAttr = \"data-active\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { EffectivePlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-action\")) as HTMLCalciteActionElement[];\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setDefaultMenuButtonEl}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce(\n        (previousValue: HTMLCalciteActionElement[], currentValue): HTMLCalciteActionElement[] => {\n          if (currentValue?.matches(\"calcite-action\")) {\n            previousValue.push(currentValue as HTMLCalciteActionElement);\n            return previousValue;\n          }\n\n          if (currentValue?.matches(\"calcite-action-group\")) {\n            return previousValue.concat(\n              Array.from(currentValue.querySelectorAll(\"calcite-action\")),\n            );\n          }\n\n          return previousValue;\n        },\n        [],\n      );\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n",":host {\n  @apply text-color-2\n  text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n}\n\n@include base-component();\n","export const CSS = {\n  container: \"container\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  heading: \"heading\",\n};\n\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  connectFloatingUI,\n  defaultOffsetDistance,\n  disconnectFloatingUI,\n  EffectivePlacement,\n  filterComputedPlacements,\n  FloatingCSS,\n  FloatingLayout,\n  FloatingUIComponent,\n  LogicalPlacement,\n  OverlayPositioning,\n  ReferenceElement,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { FloatingArrow } from \"../functional/FloatingArrow\";\nimport { getIconScale } from \"../../utils/component\";\nimport PopoverManager from \"./PopoverManager\";\nimport { PopoverMessages } from \"./assets/popover/t9n\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\n\nconst manager = new PopoverManager();\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-popover\",\n  styleUrl: \"popover.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Popover\n  implements\n    FloatingUIComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\n   */\n  @Prop({ reflect: true }) autoClose = false;\n\n  /** When `true`, displays a close button within the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\n   */\n  @Prop({ reflect: true }) flipDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * When `true`, removes the caret pointer.\n   */\n  @Prop({ reflect: true }) pointerDisabled = false;\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PopoverMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PopoverMessages;\n\n  /**\n   * Offsets the position of the popover away from the `referenceElement`.\n   *\n   * @default 6\n   */\n  @Prop({ reflect: true }) offsetDistance = defaultOffsetDistance;\n\n  @Watch(\"offsetDistance\")\n  offsetDistanceOffsetHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Offsets the position of the component along the `referenceElement`.\n   */\n  @Prop({ reflect: true }) offsetSkidding = 0;\n\n  @Watch(\"offsetSkidding\")\n  offsetSkiddingHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, displays and positions the component.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = defaultPopoverPlacement;\n\n  @Watch(\"placement\")\n  placementHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   *  The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\n   */\n  @Prop() referenceElement!: ReferenceElement | string;\n\n  @Watch(\"referenceElement\")\n  referenceElementHandler(): void {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\n   *\n   * This property can be set to `true` to manage when the component is open.\n   */\n  @Prop({ reflect: true }) triggerDisabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePopoverElement;\n\n  mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.updateFocusTrapElements(),\n  );\n\n  filteredFlipPlacements: EffectivePlacement[];\n\n  @State() effectiveLocale = \"\";\n\n  @State() floatingLayout: FloatingLayout = \"vertical\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() effectiveReferenceElement: ReferenceElement;\n\n  @State() defaultMessages: PopoverMessages;\n\n  arrowEl: SVGElement;\n\n  closeButtonEl: HTMLCalciteActionElement;\n\n  guid = `calcite-popover-${guid()}`;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  hasLoaded = false;\n\n  focusTrap: FocusTrap;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    this.setUpReferenceElement(this.hasLoaded);\n    connectFocusTrap(this);\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    this.hasLoaded = true;\n  }\n\n  disconnectedCallback(): void {\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    deactivateFocusTrap(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calcitePopoverBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calcitePopoverOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const {\n      el,\n      effectiveReferenceElement,\n      placement,\n      overlayPositioning,\n      flipDisabled,\n      filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n    } = this;\n    return reposition(\n      this,\n      {\n        floatingEl: el,\n        referenceEl: effectiveReferenceElement,\n        overlayPositioning,\n        placement,\n        flipDisabled,\n        flipPlacements: filteredFlipPlacements,\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type: \"popover\",\n      },\n      delayed,\n    );\n  }\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterComputedPlacements(flipPlacements, el)\n      : null;\n  };\n\n  setUpReferenceElement = (warn = true): void => {\n    this.removeReferences();\n    this.effectiveReferenceElement = this.getReferenceElement();\n    connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n\n    const { el, referenceElement, effectiveReferenceElement } = this;\n    if (warn && referenceElement && !effectiveReferenceElement) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el,\n      });\n    }\n\n    this.addReferences();\n  };\n\n  getId = (): string => {\n    return this.el.id || this.guid;\n  };\n\n  setExpandedAttr = (): void => {\n    const { effectiveReferenceElement, open } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  };\n\n  addReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    const id = this.getId();\n\n    if (\"setAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n    }\n\n    manager.registerElement(effectiveReferenceElement, this.el);\n    this.setExpandedAttr();\n  };\n\n  removeReferences = (): void => {\n    const { effectiveReferenceElement } = this;\n\n    if (!effectiveReferenceElement) {\n      return;\n    }\n\n    if (\"removeAttribute\" in effectiveReferenceElement) {\n      effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n      effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n    }\n\n    manager.unregisterElement(effectiveReferenceElement);\n  };\n\n  getReferenceElement(): ReferenceElement {\n    const { referenceElement, el } = this;\n\n    return (\n      (typeof referenceElement === \"string\"\n        ? queryElementRoots(el, { id: referenceElement })\n        : referenceElement) || null\n    );\n  }\n\n  hide = (): void => {\n    this.open = false;\n  };\n\n  onBeforeOpen(): void {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.calcitePopoverBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  storeArrowEl = (el: SVGElement): void => {\n    this.arrowEl = el;\n    this.reposition(true);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderCloseButton(): VNode {\n    const { messages, closable } = this;\n    return closable ? (\n      <div class={CSS.closeButtonContainer} key={CSS.closeButtonContainer}>\n        <calcite-action\n          appearance=\"transparent\"\n          class={CSS.closeButton}\n          onClick={this.hide}\n          scale={this.scale}\n          text={messages.close}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(closeButtonEl) => (this.closeButtonEl = closeButtonEl)}\n        >\n          <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n        </calcite-action>\n      </div>\n    ) : null;\n  }\n\n  renderHeader(): VNode {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    return headingNode ? (\n      <div class={CSS.header} key={CSS.header}>\n        {headingNode}\n        {this.renderCloseButton()}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled, floatingLayout } =\n      this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (\n      <FloatingArrow\n        floatingLayout={floatingLayout}\n        key=\"floating-arrow\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.storeArrowEl}\n      />\n    ) : null;\n\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(hidden)}\n        aria-label={label}\n        aria-live=\"polite\"\n        calcite-hydrated-hidden={hidden}\n        id={this.getId()}\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [FloatingCSS.animation]: true,\n            [FloatingCSS.animationActive]: displayed,\n          }}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setTransitionEl}\n        >\n          {arrowNode}\n          <div\n            class={{\n              [CSS.hasHeader]: !!heading,\n              [CSS.container]: true,\n            }}\n          >\n            {this.renderHeader()}\n            <div class={CSS.content}>\n              <slot />\n            </div>\n            {!heading ? this.renderCloseButton() : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","import { ReferenceElement } from \"../../utils/floating-ui\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { isKeyboardTriggeredClick } from \"../../utils/dom\";\n\nexport default class PopoverManager {\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  private registeredElements = new Map<ReferenceElement, HTMLCalcitePopoverElement>();\n\n  private registeredElementCount = 0;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  registerElement(referenceEl: ReferenceElement, popover: HTMLCalcitePopoverElement): void {\n    this.registeredElementCount++;\n\n    this.registeredElements.set(referenceEl, popover);\n\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n\n  unregisterElement(referenceEl: ReferenceElement): void {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private queryPopover = (composedPath: EventTarget[]): HTMLCalcitePopoverElement => {\n    const { registeredElements } = this;\n\n    const registeredElement = (composedPath as HTMLElement[]).find((pathEl) => registeredElements.has(pathEl));\n\n    return registeredElements.get(registeredElement);\n  };\n\n  private togglePopovers = (event: KeyboardEvent | PointerEvent): void => {\n    const composedPath = event.composedPath();\n    const togglePopover = this.queryPopover(composedPath);\n\n    if (togglePopover && !togglePopover.triggerDisabled) {\n      togglePopover.open = !togglePopover.open;\n    }\n\n    Array.from(this.registeredElements.values())\n      .filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover),\n      )\n      .forEach((popover) => (popover.open = false));\n  };\n\n  private closeAllPopovers(): void {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === \"Escape\") {\n      this.closeAllPopovers();\n    } else if (isActivationKey(event.key)) {\n      this.togglePopovers(event);\n    }\n  };\n\n  private clickHandler = (event: PointerEvent): void => {\n    if (isKeyboardTriggeredClick(event)) {\n      return;\n    }\n\n    this.togglePopovers(event);\n  };\n\n  private addListeners(): void {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  private removeListeners(): void {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-popover-z-index: Sets the z-index value for the component.\n */\n\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, theme(\"zIndex.popover\"));\n}\n\n@include floatingUIHost();\n@include floatingUIArrow();\n\n:host([scale=\"s\"]) {\n  .heading {\n    @apply text-n1-wrap\n    px-3\n    py-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .heading {\n    @apply text-0-wrap\n    px-4\n    py-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .heading {\n    @apply text-1-wrap\n    px-5\n    py-4;\n  }\n}\n\n:host {\n  @apply pointer-events-none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  @apply bg-foreground-1\n    border-color-3\n    rounded\n    border\n    border-solid;\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-color-border-3);\n}\n\n.header {\n  @apply border-b-color-3\n    flex\n    flex-auto\n    items-stretch\n    justify-start\n    border-0\n    border-b\n    border-solid;\n}\n\n.heading {\n  @apply text-color-1\n  word-break\n  m-0\n  block\n  flex-auto\n  self-center\n  whitespace-normal\n  font-medium;\n}\n\n.container {\n  @apply text-color-1\n    relative\n    flex\n    h-full\n    flex-row\n    flex-nowrap\n    rounded;\n  &.has-header {\n    @apply flex-col;\n  }\n}\n\n.content {\n  @apply word-break\n  flex\n  h-full\n  w-full\n  flex-col\n  flex-nowrap\n  self-center;\n}\n\n.close-button-container {\n  @apply flex overflow-hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: theme(\"borderRadius.DEFAULT\");\n  border-end-end-radius: theme(\"borderRadius.DEFAULT\");\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  @apply h-full;\n}\n\n@include base-component();\n"],"names":["CSS","DEFAULTS","width","height","strokeWidth","FloatingArrow","_ref","floatingLayout","key","ref","svgX","isVertical","dValue","concat","h","class","viewBox","d","fill","stroke","Heading","props","children","HeadingTag","level","getRoundRobinIndex","index","total","SLOTS","tooltip","trigger","ICONS","SUPPORTED_MENU_NAV_KEYS","ActionMenu","proxyCustomElement","HTMLElement","actionElements","guid","menuId","this","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","activeMenuItemIndex","tabIndex","toggleAttribute","updateActions","forEach","handleDefaultSlotChange","reduce","previousValue","currentValue","push","Array","from","querySelectorAll","disabled","hidden","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","Math","max","toggleOpenEnd","value","arguments","undefined","_this","handlePopoverOpen","handlePopoverClose","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","expandedHandler","openHandler","calciteActionMenuOpen","emit","activeMenuItemIndexHandler","componentFocusable","focusElement","renderMenuButton","appearance","scale","name","onSlotchange","icon","textEnabled","renderMenuItems","placement","overlayPositioning","flipPlacements","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","onCalcitePopoverOpen","pointerDisabled","onClick","role","render","Fragment","supportedKeys","find","k","ARIA_CONTROLS","ARIA_EXPANDED","manager","constructor","registeredElements","Map","registeredElementCount","queryPopover","composedPath","registeredElement","pathEl","has","get","togglePopovers","togglePopover","triggerDisabled","values","popover","includes","keyDownHandler","defaultPrevented","closeAllPopovers","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","set","addListeners","unregisterElement","delete","removeListeners","window","Popover","mutationObserver","createObserver","updateFocusTrapElements","openTransitionProp","hasLoaded","setTransitionEl","transitionEl","setFilteredPlacements","filteredFlipPlacements","filterComputedPlacements","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","console","tagName","addReferences","getId","setExpandedAttr","removeAttribute","hide","storeArrowEl","arrowEl","reposition","defaultOffsetDistance","handleFocusTrapDisabled","deactivateFocusTrap","activateFocusTrap","flipPlacementsHandler","onMessagesChange","offsetDistanceOffsetHandler","offsetSkiddingHandler","onToggleOpenCloseComponent","overlayPositioningHandler","placementHandler","referenceElementHandler","effectiveLocaleChange","updateMessages","effectiveLocale","connectLocalized","connectMessages","connectFocusTrap","setUpMessages","disconnectLocalized","disconnectMessages","disconnectFloatingUI","delayed","flipDisabled","offsetSkidding","floatingEl","type","forceUpdate","focusFirstTabbable","queryElementRoots","onBeforeOpen","calcitePopoverBeforeOpen","onOpen","calcitePopoverOpen","onBeforeClose","calcitePopoverBeforeClose","onClose","calcitePopoverClose","renderCloseButton","messages","closable","close","closeButtonEl","getIconScale","renderHeader","heading","headingLevel","headingNode","displayed","arrowNode","Host","FloatingCSS","animation","animationActive"],"sourceRoot":""}